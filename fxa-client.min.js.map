{"version":3,"file":"fxa-client.min.js","sources":["components/almond/almond.js","components/sjcl/sjcl.js","components/p/p.js","client/lib/hawk.js","client/lib/errors.js","client/lib/request.js","client/lib/hkdf.js","client/lib/pbkdf2.js","client/lib/credentials.js","client/lib/hawkCredentials.js","client/lib/metricsContext.js","client/FxAccountClient.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","load","alt","setTimeout","cfg","amd","jQuery","v","a","b","c","sjcl","exception","invalid","d","g","h","k","l","m","s","q","r","t","u","w","cipher","hash","keyexchange","mode","misc","codec","corrupt","toString","message","bug","notReady","aes","encrypt","decrypt","bitArray","bitSlice","clamp","extract","Math","floor","getPartial","bitLength","ceil","partial","round","equal","push","pop","utf8String","fromBits","String","fromCharCode","decodeURIComponent","escape","toBits","unescape","encodeURIComponent","charCodeAt","hex","substr","replace","parseInt","base64","base64url","sha256","reset","update","finalize","blockSize","pow","hmac","mac","digest","pbkdf2","factory","P","ot","type","throwFristError","pendingErrors","shift","flush","head","flushing","requestFlushForNodeJS","currentDomain","process","domain","active","hasSetImmediate","setImmediate","nextTick","makeRequestCallFromMutationObserver","observer","MutationObserver","WebKitMutationObserver","toggle","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setInterval","asap","task","runLater","wrapTask","forEach","arr","cb","reportError","error","onerror","x","Promise","Resolve","Settle","state","_state","_value","_domain","isNodeJS","REJECTED","_pending","OnSettled","Propagate","p2","TypeError","FULFILLED","asapSafeTask","resolverFor","then","resolve","reject","promise","done","y","reason","defer","valuesHandler","onFulfilled","values","handleValues","_","allSettled","input","output","PENDING","inspect","all","promised","thisAndArgs","allArgs","tail","requestFlush","requestErrorThrow","_disposed","enter","exit","onRejected","onSettled","func","eb","catched","thenDomain","fail","spread","array","timeout","ms","msg","timeoutId","delay","hawk","client","header","method","options","result","field","artifacts","err","timestamp","utils","now","localtimeOffsetMsec","credentials","key","algorithm","baseIndexOf","crypto","algorithms","parseUri","ts","nonce","randomString","resource","relative","host","hostname","port","ext","app","dlg","calculatePayloadHash","payload","contentType","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","request","getResponseHeader","attrsAuth","parseAuthorizationHeader","tsm","calculateTsMac","setNtpOffset","Date","getTime","required","attributes","modArtifacts","calculatedHash","authenticateTimestamp","updateClock","headerVersion","normalized","generateNormalizedString","toUpperCase","toLowerCase","parseContentType","storage","_cache","setItem","getItem","setStorage","ntpOffset","getNtpOffset","offset","console","attribute","keys","headerParts","match","scheme","attributesString","verify","$0","$1","$2","size","randomSource","len","random","fromIndex","uriRegex","uriByNumber","exec","protocol","INVALID_TIMESTAMP","INCORRECT_EMAIL_CASE","ERRORS","Request","baseUri","xhr","_localtimeOffsetMsec","XMLHttpRequest","send","path","jsonPayload","deferred","self","JSON","stringify","open","errno","onreadystatechange","readyState","responseText","parse","retrying","serverTime","status","code","hawkHeader","setRequestHeader","headers","hkdf","ikm","info","salt","prk","hashLength","num_blocks","prev","truncated","derive","iterations","kw","NAMESPACE","kwe","email","PBKDF2_ROUNDS","STRETCHED_PASS_LENGTH_BYTES","HKDF_SALT","HKDF_LENGTH","setup","emailInput","passwordInput","password","emailUTF8","passwordUTF8","quickStretchedPW","authPW","unwrapBKey","xor","bitArray1","bitArray2","unbundleKeyFetchResponse","bundle","bitBundle","deriveBundleKeys","ciphertext","expectedHmac","hmacKey","keyAWrapB","xorKey","kA","wrapKB","keyInfo","bitKeyInfo","keyMaterial","deriveHawkCredentials","tokenHex","context","token","PREFIX_NAME","out","authKey","bundleKey","OPTIONS","entrypoint","migration","service","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","marshall","metricsContext","flowId","flowBeginTime","hawkCredentials","val","FxAccountClient","uriVersionRegExp","test","VERSION","checkCreds","creds","oldUnwrapBKey","keyFetchToken","passwordChangeToken","RegExp","HKDF_SIZE","signUp","endpoint","requestOpts","redirectTo","preVerified","preVerifyToken","resume","lang","Accept-Language","accountData","signIn","skipCaseError","verifyCode","uid","recoveryEmailStatus","sessionToken","recoveryEmailResendCode","passwordForgotSendCode","passwordForgotResendCode","passwordForgotToken","passwordForgotVerifyCode","passwordForgotStatus","accountReset","newPassword","accountResetToken","queryParams","accountKeys","kB","accountDestroy","response","accountStatus","accountStatusByEmail","sessionDestroy","sessionStatus","certificateSign","publicKey","duration","passwordChange","oldPassword","_passwordChangeStart","oldCreds","_passwordChangeKeys","_passwordChangeFinish","oldAuthPW","passwordData","p1","newCreds","hawkCreds","newWrapKb","wrapKb","getRandomBytes","accountLock","accountUnlockResendCode","accountUnlockVerifyCode","deviceRegister","deviceName","deviceType","deviceCallback","pushCallback","devicePublicKey","deviceAuthKey","pushPublicKey","pushAuthKey","deviceUpdate","deviceId","deviceDestroy","deviceList"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/fA,ADggBA;AC/ftvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA,ADwCA;ACvsourcesContent":["/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"components/almond/almond\", function(){});\n\n","define('sjcl',[], function () {\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\n\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\nsjcl.cipher.aes=function(a){this.b[0][0][0]||this.g();var b,c,d,e,g=this.b[0][4],f=this.b[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid(\"invalid aes key size\");this.e=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=g[c>>>24]<<24^g[c>>16&255]<<16^g[c>>8&255]<<8^g[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:f[0][g[c>>>24]]^f[1][g[c>>16&255]]^f[2][g[c>>8&255]]^f[3][g[c&\n255]]};\nsjcl.cipher.aes.prototype={encrypt:function(a){return v(this,a,0)},decrypt:function(a){return v(this,a,1)},b:[[[],[],[],[],[]],[[],[],[],[],[]]],g:function(){var a=this.b[0],b=this.b[1],c=a[4],d=b[4],e,g,f,h=[],p=[],k,n,l,m;for(e=0;0x100>e;e++)p[(h[e]=e<<1^283*(e>>7))^e]=e;for(g=f=0;!c[g];g^=k||1,f=p[f]||1){l=f^f<<1^f<<2^f<<3^f<<4;l=l>>8^l&255^99;c[g]=l;d[l]=g;n=h[e=h[k=h[g]]];m=0x1010101*n^0x10001*e^0x101*k^0x1010100*g;n=0x101*h[l]^0x1010100*l;for(e=0;4>e;e++)a[e][g]=n=n<<24^n>>>8,b[e][l]=m=m<<24^m>>>8}for(e=\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\nfunction v(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid(\"invalid aes block size\");var d=a.e[c],e=b[0]^d[0],g=b[c?3:1]^d[1],f=b[2]^d[2];b=b[c?1:3]^d[3];var h,p,k,n=d.length/4-2,l,m=4,s=[0,0,0,0];h=a.b[c];a=h[0];var q=h[1],r=h[2],t=h[3],u=h[4];for(l=0;l<n;l++)h=a[e>>>24]^q[g>>16&255]^r[f>>8&255]^t[b&255]^d[m],p=a[g>>>24]^q[f>>16&255]^r[b>>8&255]^t[e&255]^d[m+1],k=a[f>>>24]^q[b>>16&255]^r[e>>8&255]^t[g&255]^d[m+2],b=a[b>>>24]^q[e>>16&255]^r[g>>8&255]^t[f&255]^d[m+3],m+=4,e=h,g=p,f=k;for(l=\n0;4>l;l++)s[c?3&-l:l]=u[e>>>24]<<24^u[g>>16&255]<<16^u[f>>8&255]<<8^u[b&255]^d[m++],h=e,e=g,g=f,f=b,b=h;return s}\nsjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.l(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.l(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===\nb?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b&=31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===\nc},l:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},n:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]}};\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>24),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};\nsjcl.codec.hex={fromBits:function(a){var b=\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,\"\");d=a.length;a+=\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};\nsjcl.codec.base64={i:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,c){var d=\"\",e=0,g=sjcl.codec.base64.i,f=0,h=sjcl.bitArray.bitLength(a);c&&(g=g.substr(0,62)+\"-_\");for(c=0;6*d.length<h;)d+=g.charAt((f^a[c]>>>e)>>>26),6>e?(f=a[c]<<6-e,e+=26,c++):(f<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var c=[],d,e=0,g=sjcl.codec.base64.i,f=0,h;b&&(g=g.substr(0,62)+\"-_\");for(d=0;d<a.length;d++){h=g.indexOf(a.charAt(d));\nif(0>h)throw new sjcl.exception.invalid(\"this isn't base64!\");26<e?(e-=26,c.push(f^h>>>e),f=h<<32-e):(e+=6,f^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,f,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.e[0]||this.g();a?(this.f=a.f.slice(0),this.d=a.d.slice(0),this.a=a.a):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.f=this.k.slice(0);this.d=[];this.a=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.d=sjcl.bitArray.concat(this.d,a);b=this.a;a=this.a=b+sjcl.bitArray.bitLength(a);for(b=512+b&-512;b<=a;b+=512)w(this,c.splice(0,16));return this},finalize:function(){var a,b=this.d,c=this.f,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.a/\n4294967296));for(b.push(this.a|0);b.length;)w(this,b.splice(0,16));this.reset();return c},k:[],e:[],g:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}var b=0,c=2,d;a:for(;64>b;c++){for(d=2;d*d<=c;d++)if(0===c%d)continue a;8>b&&(this.k[b]=a(Math.pow(c,0.5)));this.e[b]=a(Math.pow(c,1/3));b++}}};\nfunction w(a,b){var c,d,e,g=b.slice(0),f=a.f,h=a.e,p=f[0],k=f[1],n=f[2],l=f[3],m=f[4],s=f[5],q=f[6],r=f[7];for(c=0;64>c;c++)16>c?d=g[c]:(d=g[c+1&15],e=g[c+14&15],d=g[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+g[c&15]+g[c+9&15]|0),d=d+r+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(q^m&(s^q))+h[c],r=q,q=s,s=m,m=l+d|0,l=n,n=k,k=p,p=d+(k&n^l&(k^n))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+p|0;f[1]=f[1]+k|0;f[2]=f[2]+n|0;f[3]=f[3]+l|0;f[4]=f[4]+m|0;f[5]=f[5]+s|0;f[6]=\nf[6]+q|0;f[7]=f[7]+r|0}sjcl.misc.hmac=function(a,b){this.j=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.c=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.c[0].update(c[0]);this.c[1].update(c[1]);this.h=new b(this.c[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.m)throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};\nsjcl.misc.hmac.prototype.reset=function(){this.h=new this.j(this.c[0]);this.m=!1};sjcl.misc.hmac.prototype.update=function(a){this.m=!0;this.h.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.h.finalize(),a=(new this.j(this.c[1])).update(a).finalize();this.reset();return a};\nsjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E3;if(0>d||0>c)throw sjcl.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var g,f,h,p,k=[],n=sjcl.bitArray;for(p=1;32*k.length<(d||1);p++){e=g=a.encrypt(n.concat(b,[p]));for(f=1;f<c;f++){g=a.encrypt(g);for(h=0;h<g.length;h++)e[h]^=g[h]}k=k.concat(e)}d&&(k=n.clamp(k,d));return k};\n  return sjcl; });\n","/*!\r\n * Copyright 2013 Robert Katić\r\n * Released under the MIT license\r\n * https://github.com/rkatic/p/blob/master/LICENSE\r\n *\r\n * High-priority-tasks code-portion based on https://github.com/kriskowal/asap\r\n */\r\n;(function( factory ){\r\n\t// CommonJS\r\n\tif ( typeof module !== \"undefined\" && module && module.exports ) {\r\n\t\tmodule.exports = factory();\r\n\r\n\t// RequireJS\r\n\t} else if ( typeof define === \"function\" && define.amd ) {\r\n\t\tdefine( 'p',factory );\r\n\r\n\t// global\r\n\t} else {\r\n\t\tP = factory();\r\n\t}\r\n})(function() {\r\n\t\"use strict\";\r\n\r\n\tvar\r\n\t\tisNodeJS = ot(typeof process) &&\r\n\t\t\t({}).toString.call(process) === \"[object process]\",\r\n\r\n\t\thasSetImmediate = ot(typeof setImmediate),\r\n\r\n\t\thead = { f: null, n: null }, tail = head,\r\n\t\tflushing = false,\r\n\r\n\t\trequestFlush =\r\n\t\t\tisNodeJS && requestFlushForNodeJS ||\r\n\t\t\tmakeRequestCallFromMutationObserver( flush ) ||\r\n\t\t\tmakeRequestCallFromTimer( flush ),\r\n\r\n\t\tpendingErrors = [],\r\n\t\trequestErrorThrow = makeRequestCallFromTimer( throwFristError ),\r\n\r\n\t\twrapTask,\r\n\t\tasapSafeTask,\r\n\r\n\t\tdomain,\r\n\r\n\t\tcall = ot.call,\r\n\t\tapply = ot.apply;\r\n\r\n\tfunction ot( type ) {\r\n\t\treturn type === \"object\" || type === \"function\";\r\n\t}\r\n\r\n\tfunction throwFristError() {\r\n\t\tif ( pendingErrors.length ) {\r\n\t\t\tthrow pendingErrors.shift();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flush() {\r\n\t\twhile ( head.n ) {\r\n\t\t\thead = head.n;\r\n\t\t\tvar f = head.f;\r\n\t\t\thead.f = null;\r\n\t\t\tf.call();\r\n\t\t}\r\n\t\tflushing = false;\r\n\t}\r\n\r\n\tvar runLater = function( f ) {\r\n\t\ttail = tail.n = { f: f, n: null };\r\n\t\tif ( !flushing ) {\r\n\t\t\tflushing = true;\r\n\t\t\trequestFlush();\r\n\t\t}\r\n\t};\r\n\r\n\tfunction requestFlushForNodeJS() {\r\n\t\tvar currentDomain = process.domain;\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tif ( !domain ) domain = (1,require)(\"domain\");\r\n\t\t\tdomain.active = process.domain = null;\r\n\t\t}\r\n\r\n\t\tif ( flushing && hasSetImmediate ) {\r\n\t\t\tsetImmediate( flush );\r\n\r\n\t\t} else {\r\n\t\t\tprocess.nextTick( flush );\r\n\t\t}\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tdomain.active = process.domain = currentDomain;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeRequestCallFromMutationObserver( callback ) {\r\n\t\tvar observer =\r\n\t\t\tot(typeof MutationObserver) ? new MutationObserver( callback ) :\r\n\t\t\tot(typeof WebKitMutationObserver) ? new WebKitMutationObserver( callback ) :\r\n\t\t\tnull;\r\n\r\n\t\tif ( !observer ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar toggle = 1;\r\n\t\tvar node = document.createTextNode(\"\");\r\n\t\tobserver.observe( node, {characterData: true} );\r\n\r\n\t\treturn function() {\r\n\t\t\ttoggle = -toggle;\r\n\t\t\tnode.data = toggle;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction makeRequestCallFromTimer( callback ) {\r\n\t\treturn function() {\r\n\t\t\tvar timeoutHandle = setTimeout( handleTimer, 0 );\r\n\t\t\tvar intervalHandle = setInterval( handleTimer, 50 );\r\n\r\n\t\t\tfunction handleTimer() {\r\n\t\t\t\tclearTimeout( timeoutHandle );\r\n\t\t\t\tclearInterval( intervalHandle );\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tif ( isNodeJS ) {\r\n\t\twrapTask = function( task ) {\r\n\t\t\tvar d = process.domain;\r\n\r\n\t\t\treturn function() {\r\n\t\t\t\tif ( d ) {\r\n\t\t\t\t\tif ( d._disposed ) return;\r\n\t\t\t\t\td.enter();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\ttask.call();\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\trequestFlush();\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( d ) {\r\n\t\t\t\t\td.exit();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tasapSafeTask = function( task ) {\r\n\t\t\tvar d = process.domain;\r\n\t\t\trunLater(!d ? task : function() {\r\n\t\t\t\tif ( !d._disposed ) {\r\n\t\t\t\t\td.enter();\r\n\t\t\t\t\ttask.call();\r\n\t\t\t\t\td.exit();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t} else {\r\n\t\twrapTask = function( task ) {\r\n\t\t\treturn function() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\ttask.call();\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\tpendingErrors.push( e );\r\n\t\t\t\t\trequestErrorThrow();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tasapSafeTask = runLater;\r\n\t}\r\n\r\n\r\n\tfunction asap( task ) {\r\n\t\trunLater( wrapTask(task) );\r\n\t}\r\n\r\n\t//__________________________________________________________________________\r\n\r\n\r\n\tfunction forEach( arr, cb ) {\r\n\t\tfor ( var i = 0, l = arr.length; i < l; ++i ) {\r\n\t\t\tif ( i in arr ) {\r\n\t\t\t\tcb( arr[i], i );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reportError( error ) {\r\n\t\tasap(function() {\r\n\t\t\tif ( P.onerror ) {\r\n\t\t\t\tP.onerror.call( null, error );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar PENDING = 0;\r\n\tvar FULFILLED = 1;\r\n\tvar REJECTED = 2;\r\n\r\n\tfunction P( x ) {\r\n\t\treturn x instanceof Promise ?\r\n\t\t\tx :\r\n\t\t\tResolve( new Promise(), x );\r\n\t}\r\n\r\n\tfunction Settle( p, state, value, domain ) {\r\n\t\tif ( p._state ) {\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tp._state = state;\r\n\t\tp._value = value;\r\n\r\n\t\tif ( domain ) {\r\n\t\t\tp._domain = domain;\r\n\r\n\t\t} else if ( isNodeJS && state === REJECTED ) {\r\n\t\t\tp._domain = process.domain;\r\n\t\t}\r\n\r\n\t\tif ( p._pending.length ) {\r\n\t\t\tforEach( p._pending, runLater );\r\n\t\t}\r\n\t\tp._pending = null;\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction OnSettled( p, f ) {\r\n\t\tp._pending.push( f );\r\n\t}\r\n\r\n\tfunction Propagate( p, p2 ) {\r\n\t\tSettle( p2, p._state, p._value, p._domain );\r\n\t}\r\n\r\n\tfunction Resolve( p, x ) {\r\n\t\tif ( p._state ) {\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tif ( x instanceof Promise ) {\r\n\t\t\tif ( x === p ) {\r\n\t\t\t\tSettle( p, REJECTED, new TypeError(\"You can't resolve a promise with itself\") );\r\n\r\n\t\t\t} else if ( x._state ) {\r\n\t\t\t\tPropagate( x, p );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tOnSettled(x, function() {\r\n\t\t\t\t\tPropagate( x, p );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if ( x !== Object(x) ) {\r\n\t\t\tSettle( p, FULFILLED, x );\r\n\r\n\t\t} else {\r\n\t\t\tasapSafeTask(function() {\r\n\t\t\t\tvar r = resolverFor( p );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar then = x.then;\r\n\r\n\t\t\t\t\tif ( typeof then === \"function\" ) {\r\n\t\t\t\t\t\tcall.call( then, x, r.resolve, r.reject );\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSettle( p, FULFILLED, x );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\tr.reject( e );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction resolverFor( promise ) {\r\n\t\tvar done = false;\r\n\r\n\t\treturn {\r\n\t\t\tpromise: promise,\r\n\r\n\t\t\tresolve: function( y ) {\r\n\t\t\t\tif ( !done ) {\r\n\t\t\t\t\tdone = true;\r\n\t\t\t\t\tResolve( promise, y );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\treject: function( reason ) {\r\n\t\t\t\tif ( !done ) {\r\n\t\t\t\t\tdone = true;\r\n\t\t\t\t\tSettle( promise, REJECTED, reason );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tP.defer = defer;\r\n\tfunction defer() {\r\n\t\treturn resolverFor( new Promise() );\r\n\t}\r\n\r\n\tP.reject = reject;\r\n\tfunction reject( reason ) {\r\n\t\treturn Settle( new Promise(), REJECTED, reason );\r\n\t}\r\n\r\n\tfunction Promise() {\r\n\t\tthis._state = 0;\r\n\t\tthis._value = void 0;\r\n\t\tthis._domain = null;\r\n\t\tthis._pending = [];\r\n\t}\r\n\r\n\tPromise.prototype.then = function( onFulfilled, onRejected ) {\r\n\t\tvar cb = typeof onFulfilled === \"function\" ? onFulfilled : null;\r\n\t\tvar eb = typeof onRejected === \"function\" ? onRejected : null;\r\n\r\n\t\tvar p = this;\r\n\t\tvar p2 = new Promise();\r\n\r\n\t\tvar thenDomain = isNodeJS && process.domain;\r\n\r\n\t\tfunction onSettled() {\r\n\t\t\tvar func = p._state === FULFILLED ? cb : eb;\r\n\t\t\tif ( !func ) {\r\n\t\t\t\tPropagate( p, p2 );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar x, catched = false;\r\n\t\t\tvar d = p._domain || thenDomain;\r\n\r\n\t\t\tif ( d ) {\r\n\t\t\t\tif ( d._disposed ) return;\r\n\t\t\t\td.enter();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tx = func( p._value );\r\n\r\n\t\t\t} catch ( e ) {\r\n\t\t\t\tcatched = true;\r\n\t\t\t\tSettle( p2, REJECTED, e );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !catched ) {\r\n\t\t\t\tResolve( p2, x );\r\n\t\t\t}\r\n\r\n\t\t\tif ( d ) {\r\n\t\t\t\td.exit();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( p._state === PENDING ) {\r\n\t\t\tOnSettled( p, onSettled );\r\n\r\n\t\t} else {\r\n\t\t\trunLater( onSettled );\r\n\t\t}\r\n\r\n\t\treturn p2;\r\n\t};\r\n\r\n\tPromise.prototype.done = function( cb, eb ) {\r\n\t\tvar p = this;\r\n\r\n\t\tif ( cb || eb ) {\r\n\t\t\tp = p.then( cb, eb );\r\n\t\t}\r\n\r\n\t\tp.then( null, reportError );\r\n\t};\r\n\r\n\tPromise.prototype.fail = function( eb ) {\r\n\t\treturn this.then( null, eb );\r\n\t};\r\n\r\n\tPromise.prototype.spread = function( cb, eb ) {\r\n\t\treturn this.then(cb && function( array ) {\r\n\t\t\treturn all( array, [] ).then(function( values ) {\r\n\t\t\t\treturn apply.call( cb, void 0, values );\r\n\t\t\t}, eb);\r\n\t\t}, eb);\r\n\t};\r\n\r\n\tPromise.prototype.timeout = function( ms, msg ) {\r\n\t\tvar p = this;\r\n\t\tvar p2 = new Promise();\r\n\r\n\t\tif ( p._state !== PENDING ) {\r\n\t\t\tPropagate( p, p2 );\r\n\r\n\t\t} else {\r\n\t\t\tvar timeoutId = setTimeout(function() {\r\n\t\t\t\tSettle( p2, REJECTED,\r\n\t\t\t\t\tnew Error(msg || \"Timed out after \" + ms + \" ms\") );\r\n\t\t\t}, ms);\r\n\r\n\t\t\tOnSettled(p, function() {\r\n\t\t\t\tclearTimeout( timeoutId );\r\n\t\t\t\tPropagate( p, p2 );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn p2;\r\n\t};\r\n\r\n\tPromise.prototype.delay = function( ms ) {\r\n\t\tvar d = defer();\r\n\r\n\t\tthis.then(function( value ) {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\td.resolve( value );\r\n\t\t\t}, ms);\r\n\t\t}, d.reject);\r\n\r\n\t\treturn d.promise;\r\n\t};\r\n\r\n\tPromise.prototype.inspect = function() {\r\n\t\tswitch ( this._state ) {\r\n\t\t\tcase PENDING:   return { state: \"pending\" };\r\n\t\t\tcase FULFILLED: return { state: \"fulfilled\", value: this._value };\r\n\t\t\tcase REJECTED:  return { state: \"rejected\", reason: this._value };\r\n\t\t\tdefault: throw new TypeError(\"invalid state\");\r\n\t\t}\r\n\t};\r\n\r\n\tfunction valuesHandler( f ) {\r\n\t\tfunction onFulfilled( values ) {\r\n\t\t\treturn f( values, [] );\r\n\t\t}\r\n\r\n\t\tfunction handleValues( values ) {\r\n\t\t\treturn P( values ).then( onFulfilled );\r\n\t\t}\r\n\r\n\t\thandleValues._ = f;\r\n\t\treturn handleValues;\r\n\t}\r\n\r\n\tP.allSettled = valuesHandler( allSettled );\r\n\tfunction allSettled( input, output ) {\r\n\t\tvar waiting = 0;\r\n\t\tvar promise = new Promise();\r\n\t\tforEach( input, function( x, index ) {\r\n\t\t\tvar p = P( x );\r\n\t\t\tif ( p._state === PENDING ) {\r\n\t\t\t\t++waiting;\r\n\t\t\t\tOnSettled(p, function() {\r\n\t\t\t\t\toutput[ index ] = p.inspect();\r\n\t\t\t\t\tif ( --waiting === 0 ) {\r\n\t\t\t\t\t\tSettle( promise, FULFILLED, output );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\toutput[ index ] = p.inspect();\r\n\t\t\t}\r\n\t\t});\r\n\t\tif ( waiting === 0 ) {\r\n\t\t\tSettle( promise, FULFILLED, output );\r\n\t\t}\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tP.all = valuesHandler( all );\r\n\tfunction all( input, output ) {\r\n\t\tvar waiting = 0;\r\n\t\tvar d = defer();\r\n\t\tforEach( input, function( x, index ) {\r\n\t\t\tvar p = P( x );\r\n\t\t\tif ( p._state === FULFILLED ) {\r\n\t\t\t\toutput[ index ] = p._value;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t++waiting;\r\n\t\t\t\tp.then(function( value ) {\r\n\t\t\t\t\toutput[ index ] = value;\r\n\t\t\t\t\tif ( --waiting === 0 ) {\r\n\t\t\t\t\t\td.resolve( output );\r\n\t\t\t\t\t}\r\n\t\t\t\t}, d.reject);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif ( waiting === 0 ) {\r\n\t\t\td.resolve( output );\r\n\t\t}\r\n\t\treturn d.promise;\r\n\t}\r\n\r\n\tP.promised = promised;\r\n\tfunction promised( f ) {\r\n\t\tfunction onFulfilled( thisAndArgs ) {\r\n\t\t\treturn apply.apply( f, thisAndArgs );\r\n\t\t}\r\n\r\n\t\treturn function() {\r\n\t\t\tvar allArgs = all( arguments, [] );\r\n\t\t\treturn all( [this, allArgs], [] ).then( onFulfilled );\r\n\t\t};\r\n\t}\r\n\r\n\tP.onerror = null;\r\n\r\n\tP.nextTick = asap;\r\n\r\n\treturn P;\r\n});\r\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawk',['sjcl'], function (sjcl) {\n  'use strict';\n\n  /*\n   HTTP Hawk Authentication Scheme\n   Copyright (c) 2012-2013, Eran Hammer <eran@hueniverse.com>\n   MIT Licensed\n   */\n\n\n  // Declare namespace\n\n  var hawk = {};\n\n  hawk.client = {\n\n    // Generate an Authorization header for a given request\n\n    /*\n     uri: 'http://example.com/resource?a=b'\n     method: HTTP verb (e.g. 'GET', 'POST')\n     options: {\n\n     // Required\n\n     credentials: {\n     id: 'dh37fgj492je',\n     key: 'aoijedoaijsdlaksjdl',\n     algorithm: 'sha256'                                 // 'sha1', 'sha256'\n     },\n\n     // Optional\n\n     ext: 'application-specific',                        // Application specific data sent via the ext attribute\n     timestamp: Date.now() / 1000,                       // A pre-calculated timestamp in seconds\n     nonce: '2334f34f',                                  // A pre-generated nonce\n     localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n     payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n     contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n     hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n     app: '24s23423f34dx',                               // Oz application id\n     dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n     }\n     */\n\n    header: function (uri, method, options) {\n      /*eslint complexity: [2, 21] */\n      var result = {\n        field: '',\n        artifacts: {}\n      };\n\n      // Validate inputs\n\n      if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        result.err = 'Invalid argument type';\n        return result;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        result.err = 'Invalid credential object';\n        return result;\n      }\n\n      if (hawk.utils.baseIndexOf(hawk.crypto.algorithms, credentials.algorithm) === -1) {\n        result.err = 'Unknown algorithm';\n        return result;\n      }\n\n      // Parse URI\n\n      if (typeof uri === 'string') {\n        uri = hawk.utils.parseUri(uri);\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        method: method,\n        resource: uri.relative,\n        host: uri.hostname,\n        port: uri.port,\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n      };\n\n      result.artifacts = artifacts;\n\n      // Calculate payload hash\n\n      if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n      }\n\n      var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n\n      // Construct header\n\n      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n      var header = 'Hawk id=\"' + credentials.id +\n        '\", ts=\"' + artifacts.ts +\n        '\", nonce=\"' + artifacts.nonce +\n        (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n        (hasExt ? '\", ext=\"' + hawk.utils.escapeHeaderAttribute(artifacts.ext) : '') +\n        '\", mac=\"' + mac + '\"';\n\n      if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n          (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n      }\n\n      result.field = header;\n\n      return result;\n    },\n\n\n    // Validate server response\n\n    /*\n     request:    object created via 'new XMLHttpRequest()' after response received\n     artifacts:  object recieved from header().artifacts\n     options: {\n     payload:    optional payload received\n     required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n     }\n     */\n\n    authenticate: function (request, credentials, artifacts, options) {\n\n      options = options || {};\n\n      if (request.getResponseHeader('www-authenticate')) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attrsAuth = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('www-authenticate'), ['ts', 'tsm', 'error']);\n        if (!attrsAuth) {\n          return false;\n        }\n\n        if (attrsAuth.ts) {\n          var tsm = hawk.crypto.calculateTsMac(attrsAuth.ts, credentials);\n          if (tsm !== attrsAuth.tsm) {\n            return false;\n          }\n\n          hawk.utils.setNtpOffset(attrsAuth.ts - Math.floor((new Date()).getTime() / 1000));     // Keep offset at 1 second precision\n        }\n      }\n\n      // Parse HTTP Server-Authorization header\n\n      if (!request.getResponseHeader('server-authorization') &&\n        !options.required) {\n\n        return true;\n      }\n\n      var attributes = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('server-authorization'), ['mac', 'ext', 'hash']);\n      if (!attributes) {\n        return false;\n      }\n\n      var modArtifacts = {\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        method: artifacts.method,\n        resource: artifacts.resource,\n        host: artifacts.host,\n        port: artifacts.port,\n        hash: attributes.hash,\n        ext: attributes.ext,\n        app: artifacts.app,\n        dlg: artifacts.dlg\n      };\n\n      var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n      if (mac !== attributes.mac) {\n        return false;\n      }\n\n      if (!options.hasOwnProperty('payload')) {\n        return true;\n      }\n\n      if (!attributes.hash) {\n        return false;\n      }\n\n      var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.getResponseHeader('content-type'));\n      return (calculatedHash === attributes.hash);\n    },\n\n    message: function (host, port, message, options) {\n\n      // Validate inputs\n\n      if (!host || typeof host !== 'string' ||\n        !port || typeof port !== 'number' ||\n        message === null || message === undefined || typeof message !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return null;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return null;\n      }\n\n      if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return null;\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        host: host,\n        port: port,\n        hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n      };\n\n      // Construct authorization\n\n      var result = {\n        id: credentials.id,\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        hash: artifacts.hash,\n        mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n      };\n\n      return result;\n    },\n\n    authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n\n      var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n      if (tsm !== message.tsm) {\n        return false;\n      }\n\n      if (updateClock !== false) {\n        hawk.utils.setNtpOffset(message.ts - Math.floor((new Date()).getTime() / 1000));    // Keep offset at 1 second precision\n      }\n\n      return true;\n    }\n  };\n\n\n  hawk.crypto = {\n\n    headerVersion: '1',\n\n    algorithms: ['sha1', 'sha256'],\n\n    calculateMac: function (type, credentials, options) {\n      var normalized = hawk.crypto.generateNormalizedString(type, options);\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update(normalized);\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    },\n\n    generateNormalizedString: function (type, options) {\n\n      var normalized = 'hawk.' + hawk.crypto.headerVersion + '.' + type + '\\n' +\n        options.ts + '\\n' +\n        options.nonce + '\\n' +\n        (options.method || '').toUpperCase() + '\\n' +\n        (options.resource || '') + '\\n' +\n        options.host.toLowerCase() + '\\n' +\n        options.port + '\\n' +\n        (options.hash || '') + '\\n';\n\n      if (options.ext) {\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n      }\n\n      normalized += '\\n';\n\n      if (options.app) {\n        normalized += options.app + '\\n' +\n          (options.dlg || '') + '\\n';\n      }\n\n      return normalized;\n    },\n\n    calculatePayloadHash: function (payload, algorithm, contentType) {\n      var hash = new sjcl.hash.sha256();\n      hash.update('hawk.' + hawk.crypto.headerVersion + '.payload\\n')\n        .update(hawk.utils.parseContentType(contentType) + '\\n')\n        .update(payload || '')\n        .update('\\n');\n\n      return sjcl.codec.base64.fromBits(hash.finalize());\n    },\n\n    calculateTsMac: function (ts, credentials) {\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n');\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    }\n  };\n\n\n  hawk.utils = {\n\n    storage: {                                      // localStorage compatible interface\n      _cache: {},\n      setItem: function (key, value) {\n\n        hawk.utils.storage._cache[key] = value;\n      },\n      getItem: function (key) {\n\n        return hawk.utils.storage._cache[key];\n      }\n    },\n\n    setStorage: function (storage) {\n\n      var ntpOffset = hawk.utils.getNtpOffset() || 0;\n      hawk.utils.storage = storage;\n      hawk.utils.setNtpOffset(ntpOffset);\n    },\n\n    setNtpOffset: function (offset) {\n\n      try {\n        hawk.utils.storage.setItem('hawk_ntp_offset', offset);\n      }\n      catch (err) {\n        console.error('[hawk] could not write to storage.');\n        console.error(err);\n      }\n    },\n\n    getNtpOffset: function () {\n\n      return parseInt(hawk.utils.storage.getItem('hawk_ntp_offset') || '0', 10);\n    },\n\n    now: function () {\n\n      return (new Date()).getTime() + hawk.utils.getNtpOffset();\n    },\n\n    escapeHeaderAttribute: function (attribute) {\n\n      return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');\n    },\n\n    parseContentType: function (header) {\n\n      if (!header) {\n        return '';\n      }\n\n      return header.split(';')[0].replace(/^\\s+|\\s+$/g, '').toLowerCase();\n    },\n\n    parseAuthorizationHeader: function (header, keys) {\n\n      if (!header) {\n        return null;\n      }\n\n      var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n      if (!headerParts) {\n        return null;\n      }\n\n      var scheme = headerParts[1];\n      if (scheme.toLowerCase() !== 'hawk') {\n        return null;\n      }\n\n      var attributesString = headerParts[2];\n      if (!attributesString) {\n        return null;\n      }\n\n      var attributes = {};\n      var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n          return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n          return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n          return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n      });\n\n      if (verify !== '') {\n        return null;\n      }\n\n      return attributes;\n    },\n\n    randomString: function (size) {\n\n      var randomSource = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var len = randomSource.length;\n\n      var result = [];\n      for (var i = 0; i < size; ++i) {\n        result[i] = randomSource[Math.floor(Math.random() * len)];\n      }\n\n      return result.join('');\n    },\n\n    baseIndexOf: function(array, value, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    },\n\n    parseUri: function (input) {\n\n      // Based on: parseURI 1.2.2\n      // http://blog.stevenlevithan.com/archives/parseuri\n      // (c) Steven Levithan <stevenlevithan.com>\n      // MIT License\n\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'hostname', 'port', 'resource', 'relative', 'pathname', 'directory', 'file', 'query', 'fragment'];\n\n      var uriRegex = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?)(?:#(.*))?)/;\n      var uriByNumber = uriRegex.exec(input);\n      var uri = {};\n\n      var i = 15;\n      while (i--) {\n        uri[keys[i]] = uriByNumber[i] || '';\n      }\n\n      if (uri.port === null ||\n        uri.port === '') {\n\n        uri.port = (uri.protocol.toLowerCase() === 'http' ? '80' : (uri.protocol.toLowerCase() === 'https' ? '443' : ''));\n      }\n\n      return uri;\n    }\n  };\n\n\n  return hawk;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/errors',[], function () {\n  return {\n    INVALID_TIMESTAMP: 111,\n    INCORRECT_EMAIL_CASE: 120\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/request',['./hawk', 'p', './errors'], function (hawk, P, ERRORS) {\n  'use strict';\n  /* global XMLHttpRequest */\n\n  /**\n   * @class Request\n   * @constructor\n   * @param {String} baseUri Base URI\n   * @param {Object} xhr XMLHttpRequest constructor\n   * @param {Object} [options={}] Options\n   *   @param {Number} [options.localtimeOffsetMsec]\n   *   Local time offset with the remote auth server's clock\n   */\n  function Request (baseUri, xhr, options) {\n    if (!options) {\n      options = {};\n    }\n    this.baseUri = baseUri;\n    this._localtimeOffsetMsec = options.localtimeOffsetMsec;\n    this.xhr = xhr || XMLHttpRequest;\n    this.timeout = options.timeout || 30 * 1000;\n  }\n\n  /**\n   * @method send\n   * @param {String} path Request path\n   * @param {String} method HTTP Method\n   * @param {Object} credentials HAWK Headers\n   * @param {Object} jsonPayload JSON Payload\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.retrying]\n   *   Flag indicating if the request is a retry\n   *   @param {Array} [options.headers]\n   *   A set of extra headers to add to the request\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  Request.prototype.send = function request(path, method, credentials, jsonPayload, options) {\n    /*eslint complexity: [2, 8] */\n    var deferred = P.defer();\n    var xhr = new this.xhr();\n    var uri = this.baseUri + path;\n    var payload = null;\n    var self = this;\n    options = options || {};\n\n    if (jsonPayload) {\n      payload = JSON.stringify(jsonPayload);\n    }\n\n    try {\n      xhr.open(method, uri);\n    } catch (e) {\n      return P.reject({ error: 'Unknown error', message: e.toString(), errno: 999 });\n    }\n\n    xhr.timeout = this.timeout;\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        var result = xhr.responseText;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (e) { }\n\n        if (result.errno) {\n          // Try to recover from a timeskew error and not already tried\n          if (result.errno === ERRORS.INVALID_TIMESTAMP && !options.retrying) {\n            var serverTime = result.serverTime;\n            self._localtimeOffsetMsec = (serverTime * 1000) - new Date().getTime();\n\n            // add to options that the request is retrying\n            options.retrying = true;\n\n            return self.send(path, method, credentials, jsonPayload, options)\n              .then(deferred.resolve, deferred.reject);\n\n          } else {\n            return deferred.reject(result);\n          }\n        }\n\n        if (typeof xhr.status === 'undefined' || xhr.status !== 200) {\n          if (result.length === 0) {\n            return deferred.reject({ error: 'Timeout error', errno: 999 });\n          } else {\n            return deferred.reject({ error: 'Unknown error', message: result, errno: 999, code: xhr.status });\n          }\n        }\n\n        deferred.resolve(result);\n      }\n    };\n\n    // calculate Hawk header if credentials are supplied\n    if (credentials) {\n      var hawkHeader = hawk.client.header(uri, method, {\n                          credentials: credentials,\n                          payload: payload,\n                          contentType: 'application/json',\n                          localtimeOffsetMsec: this._localtimeOffsetMsec || 0\n                        });\n      xhr.setRequestHeader('authorization', hawkHeader.field);\n    }\n\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    if (options && options.headers) {\n      // set extra headers for this request\n      for (var header in options.headers) {\n        xhr.setRequestHeader(header, options.headers[header]);\n      }\n    }\n\n    xhr.send(payload);\n\n    return deferred.promise;\n  };\n\n  return Request;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hkdf',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * hkdf - The HMAC-based Key Derivation Function\n   * based on https://github.com/mozilla/node-hkdf\n   *\n   * @class hkdf\n   * @param {bitArray} ikm Initial keying material\n   * @param {bitArray} info Key derivation data\n   * @param {bitArray} salt Salt\n   * @param {integer} length Length of the derived key in bytes\n   * @return promise object- It will resolve with `output` data\n   */\n  function hkdf(ikm, info, salt, length) {\n\n    var mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n    mac.update(ikm);\n\n    // compute the PRK\n    var prk = mac.digest();\n\n    // hash length is 32 because only sjcl.hash.sha256 is used at this moment\n    var hashLength = 32;\n    var num_blocks = Math.ceil(length / hashLength);\n    var prev = sjcl.codec.hex.toBits('');\n    var output = '';\n\n    for (var i = 0; i < num_blocks; i++) {\n      var hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n\n      var input = sjcl.bitArray.concat(\n        sjcl.bitArray.concat(prev, info),\n        sjcl.codec.utf8String.toBits((String.fromCharCode(i + 1)))\n      );\n\n      hmac.update(input);\n\n      prev = hmac.digest();\n      output += sjcl.codec.hex.fromBits(prev);\n    }\n\n    var truncated = sjcl.bitArray.clamp(sjcl.codec.hex.toBits(output), length * 8);\n\n    return P(truncated);\n  }\n\n  return hkdf;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/pbkdf2',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * @class pbkdf2\n   * @constructor\n   */\n  var pbkdf2 = {\n    /**\n     * @method derive\n     * @param  {bitArray} input The password hex buffer.\n     * @param  {bitArray} salt The salt string buffer.\n     * @return {int} iterations the derived key bit array.\n     */\n    derive: function(input, salt, iterations, len) {\n      var result = sjcl.misc.pbkdf2(input, salt, iterations, len, sjcl.misc.hmac);\n      return P(result);\n    }\n  };\n\n  return pbkdf2;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/credentials',['./request', 'sjcl', 'p', './hkdf', './pbkdf2'], function (Request, sjcl, P, hkdf, pbkdf2) {\n  'use strict';\n\n  // Key wrapping and stretching configuration.\n  var NAMESPACE = 'identity.mozilla.com/picl/v1/';\n  var PBKDF2_ROUNDS = 1000;\n  var STRETCHED_PASS_LENGTH_BYTES = 32 * 8;\n\n  var HKDF_SALT = sjcl.codec.hex.toBits('00');\n  var HKDF_LENGTH = 32;\n\n  /**\n   * Key Wrapping with a name\n   *\n   * @method kw\n   * @static\n   * @param {String} name The name of the salt\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kw(name) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name);\n  }\n\n  /**\n   * Key Wrapping with a name and an email\n   *\n   * @method kwe\n   * @static\n   * @param {String} name The name of the salt\n   * @param {String} email The email of the user.\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kwe(name, email) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name + ':' + email);\n  }\n\n  /**\n   * @class credentials\n   * @constructor\n   */\n  return {\n    /**\n     * Setup credentials\n     *\n     * @method setup\n     * @param {String} emailInput\n     * @param {String} passwordInput\n     * @return {Promise} A promise that will be fulfilled with `result` of generated credentials\n     */\n    setup: function (emailInput, passwordInput) {\n      var result = {};\n      var email = kwe('quickStretch', emailInput);\n      var password = sjcl.codec.utf8String.toBits(passwordInput);\n\n      result.emailUTF8 = emailInput;\n      result.passwordUTF8 = passwordInput;\n\n      return pbkdf2.derive(password, email, PBKDF2_ROUNDS, STRETCHED_PASS_LENGTH_BYTES)\n        .then(\n        function (quickStretchedPW) {\n          result.quickStretchedPW = quickStretchedPW;\n\n          return hkdf(quickStretchedPW, kw('authPW'), HKDF_SALT, HKDF_LENGTH)\n            .then(\n            function (authPW) {\n              result.authPW = authPW;\n\n              return hkdf(quickStretchedPW, kw('unwrapBkey'), HKDF_SALT, HKDF_LENGTH);\n            }\n          );\n        }\n      )\n        .then(\n        function (unwrapBKey) {\n          result.unwrapBKey = unwrapBKey;\n          return result;\n        }\n      );\n    },\n    /**\n     * Wrap\n     *\n     * @method wrap\n     * @param {bitArray} bitArray1\n     * @param {bitArray} bitArray2\n     * @return {bitArray} wrap result of the two bitArrays\n     */\n    xor: function (bitArray1, bitArray2) {\n      var result = [];\n\n      for (var i = 0; i < bitArray1.length; i++) {\n        result[i] = bitArray1[i] ^ bitArray2[i];\n      }\n\n      return result;\n    },\n    /**\n     * Unbundle the WrapKB\n     * @param {String} key Bundle Key in hex\n     * @param {String} bundle Key bundle in hex\n     * @returns {*}\n     */\n    unbundleKeyFetchResponse: function (key, bundle) {\n      var self = this;\n      var bitBundle = sjcl.codec.hex.toBits(bundle);\n\n      return this.deriveBundleKeys(key, 'account/keys')\n        .then(\n          function (keys) {\n            var ciphertext = sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64);\n            var expectedHmac = sjcl.bitArray.bitSlice(bitBundle, 8 * -32);\n            var hmac = new sjcl.misc.hmac(keys.hmacKey, sjcl.hash.sha256);\n            hmac.update(ciphertext);\n\n            if (!sjcl.bitArray.equal(hmac.digest(), expectedHmac)) {\n              throw new Error('Bad HMac');\n            }\n\n            var keyAWrapB = self.xor(sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64), keys.xorKey);\n\n            return {\n              kA: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 0, 8 * 32)),\n              wrapKB: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 8 * 32))\n            };\n          }\n        );\n    },\n    /**\n     * Derive the HMAC and XOR keys required to encrypt a given size of payload.\n     * @param {String} key Hex Bundle Key\n     * @param {String} keyInfo Bundle Key Info\n     * @returns {Object} hmacKey, xorKey\n     */\n    deriveBundleKeys: function(key, keyInfo) {\n      var bitKeyInfo = kw(keyInfo);\n      var salt = sjcl.codec.hex.toBits('');\n      key = sjcl.codec.hex.toBits(key);\n\n      return hkdf(key, bitKeyInfo, salt, 3 * 32)\n        .then(\n          function (keyMaterial) {\n\n            return {\n              hmacKey: sjcl.bitArray.bitSlice(keyMaterial, 0, 8 * 32),\n              xorKey: sjcl.bitArray.bitSlice(keyMaterial, 8 * 32)\n            };\n          }\n        );\n    }\n  };\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawkCredentials',['sjcl', './hkdf'], function (sjcl, hkdf) {\n  'use strict';\n\n  var PREFIX_NAME = 'identity.mozilla.com/picl/v1/';\n  var bitSlice = sjcl.bitArray.bitSlice;\n  var salt = sjcl.codec.hex.toBits('');\n\n  /**\n   * @class hawkCredentials\n   * @method deriveHawkCredentials\n   * @param {String} tokenHex\n   * @param {String} context\n   * @param {int} size\n   * @returns {Promise}\n   */\n  function deriveHawkCredentials(tokenHex, context, size) {\n    var token = sjcl.codec.hex.toBits(tokenHex);\n    var info = sjcl.codec.utf8String.toBits(PREFIX_NAME + context);\n\n    return hkdf(token, info, salt, size || 3 * 32)\n      .then(function(out) {\n        var authKey = bitSlice(out, 8 * 32, 8 * 64);\n        var bundleKey = bitSlice(out, 8 * 64);\n\n        return {\n          algorithm: 'sha256',\n          id: sjcl.codec.hex.fromBits(bitSlice(out, 0, 8 * 32)),\n          key: authKey,\n          bundleKey: bundleKey\n        };\n      });\n  }\n\n  return deriveHawkCredentials;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// This module does the handling for the metrics context\n// activity event metadata.\n\ndefine('client/lib/metricsContext',[], function () {\n  'use strict';\n\n  var OPTIONS = {\n    context: true,\n    entrypoint: true,\n    migration: true,\n    service: true,\n    utmCampaign: true,\n    utmContent: true,\n    utmMedium: true,\n    utmSource: true,\n    utmTerm: true\n  };\n\n  return {\n    marshall: function (data) {\n      var metricsContext = {\n        flowId: data.flowId,\n        flowBeginTime: data.flowBeginTime\n      };\n\n      for (var key in data) {\n        if (data.hasOwnProperty(key) && data[key] && OPTIONS[key]) {\n          metricsContext[key] = data[key];\n        }\n      }\n\n      return metricsContext;\n    }\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/FxAccountClient',[\n  'sjcl',\n  'p',\n  './lib/credentials',\n  './lib/errors',\n  './lib/hawkCredentials',\n  './lib/metricsContext',\n  './lib/request',\n], function (sjcl, P, credentials, ERRORS, hawkCredentials, metricsContext, Request) {\n  'use strict';\n\n  var VERSION = 'v1';\n  var uriVersionRegExp = new RegExp('/' + VERSION + '$');\n  var HKDF_SIZE = 2 * 32;\n\n  function required(val, name) {\n    if (!val || val === {}) {\n      throw new Error('Missing ' + name);\n    }\n  }\n\n  /**\n   * @class FxAccountClient\n   * @constructor\n   * @param {String} uri Auth Server URI\n   * @param {Object} config Configuration\n   */\n  function FxAccountClient(uri, config) {\n    if (! uri && ! config) {\n      throw new Error('Firefox Accounts auth server endpoint or configuration object required.');\n    }\n\n    if (typeof uri !== 'string') {\n      config = uri || {};\n      uri = config.uri;\n    }\n\n    if (typeof config === 'undefined') {\n      config = {};\n    }\n\n    if (! uri) {\n      throw new Error('FxA auth server uri not set.');\n    }\n\n    if (!uriVersionRegExp.test(uri)) {\n      uri = uri + '/' + VERSION;\n    }\n\n    this.request = new Request(uri, config.xhr, { localtimeOffsetMsec: config.localtimeOffsetMsec });\n  }\n\n  FxAccountClient.VERSION = VERSION;\n\n  /**\n   * @method signUp\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.preVerified]\n   *   set email to be verified if possible\n   *   @param {String} [options.preVerifyToken]\n   *   Opaque alphanumeric token that can be used to pre-verify a user.\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {String} [options.metricsContext.context] context identifier\n   *     @param {String} [options.metricsContext.entrypoint] entrypoint identifier\n   *     @param {String} [options.metricsContext.migration] migration identifier\n   *     @param {String} [options.metricsContext.service] service identifier\n   *     @param {String} [options.metricsContext.utmCampaign] marketing campaign identifier\n   *     @param {String} [options.metricsContext.utmContent] marketing campaign content identifier\n   *     @param {String} [options.metricsContext.utmMedium] marketing campaign medium\n   *     @param {String} [options.metricsContext.utmSource] marketing campaign source\n   *     @param {String} [options.metricsContext.utmTerm] marketing campaign search term\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signUp = function (email, password, options) {\n    var self = this;\n\n    required(email, 'email');\n    required(password, 'password');\n\n    return credentials.setup(email, password)\n      .then(\n        function (result) {\n          /*eslint complexity: [2, 13] */\n          var endpoint = '/account/create';\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n          var requestOpts = {};\n\n          if (options) {\n            if (options.service) {\n              data.service = options.service;\n            }\n\n            if (options.redirectTo) {\n              data.redirectTo = options.redirectTo;\n            }\n\n            // preVerified and preVerifyToken exist for two different use\n            // cases. preVerified is used for unit/functional testing, while\n            // preVerifyToken is used by trusted RPs to indicate a user is\n            // already verified. The plan is to eventually drop preVerified and\n            // use preVerifyToken universally.\n            if (options.preVerified) {\n              data.preVerified = options.preVerified;\n            }\n\n            if (options.preVerifyToken) {\n              data.preVerifyToken = options.preVerifyToken;\n            }\n\n            if (options.resume) {\n              data.resume = options.resume;\n            }\n\n            if (options.keys) {\n              endpoint += '?keys=true';\n            }\n\n            if (options.lang) {\n              requestOpts.headers = {\n                'Accept-Language': options.lang\n              };\n            }\n\n            if (options.metricsContext) {\n              data.metricsContext = metricsContext.marshall(options.metricsContext);\n            }\n          }\n\n          return self.request.send(endpoint, 'POST', null, data, requestOpts)\n            .then(\n              function(accountData) {\n                if (options && options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method signIn\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reason]\n   *   Reason for sign in. Can be one of: `signin`, `password_check`,\n   *   `password_change`, `password_reset`, `account_unlock`.\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {String} [options.metricsContext.context] context identifier\n   *     @param {String} [options.metricsContext.entrypoint] entrypoint identifier\n   *     @param {String} [options.metricsContext.migration] migration identifier\n   *     @param {String} [options.metricsContext.service] service identifier\n   *     @param {String} [options.metricsContext.utmCampaign] marketing campaign identifier\n   *     @param {String} [options.metricsContext.utmContent] marketing campaign content identifier\n   *     @param {String} [options.metricsContext.utmMedium] marketing campaign medium\n   *     @param {String} [options.metricsContext.utmSource] marketing campaign source\n   *     @param {String} [options.metricsContext.utmTerm] marketing campaign search term\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signIn = function (email, password, options) {\n    var self = this;\n    options = options || {};\n\n    required(email, 'email');\n    required(password, 'password');\n\n    return credentials.setup(email, password)\n      .then(\n        function (result) {\n          var endpoint = '/account/login';\n\n          if (options.keys) {\n            endpoint += '?keys=true';\n          }\n\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n\n          if (options.reason) {\n            data.reason = options.reason;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          return self.request.send(endpoint, 'POST', null, data)\n            .then(\n              function(accountData) {\n                if (options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              },\n              function(error) {\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.signIn(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method verifyCode\n   * @param {String} uid Account ID\n   * @param {String} code Verification code\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.verifyCode = function(uid, code) {\n    required(uid, 'uid');\n    required(code, 'verify code');\n\n    return this.request.send('/recovery_email/verify_code', 'POST', null, {\n      uid: uid,\n      code: code\n    });\n  };\n\n  /**\n   * @method recoveryEmailStatus\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailStatus = function(sessionToken) {\n    var self = this;\n    required(sessionToken, 'sessionToken');\n\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/recovery_email/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   *\n   * @method recoveryEmailResendCode\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailResendCode = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    var requestOpts = {};\n\n    required(sessionToken, 'sessionToken');\n\n    if (options) {\n      if (options.service) {\n        data.service = options.service;\n      }\n\n      if (options.redirectTo) {\n        data.redirectTo = options.redirectTo;\n      }\n\n      if (options.resume) {\n        data.resume = options.resume;\n      }\n\n      if (options.lang) {\n        requestOpts.headers = {\n          'Accept-Language': options.lang\n        };\n      }\n    }\n\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/recovery_email/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Used to ask the server to send a recovery code.\n   * The API returns passwordForgotToken to the client.\n   *\n   * @method passwordForgotSendCode\n   * @param {String} email\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotSendCode = function(email, options) {\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    required(email, 'email');\n\n    if (options) {\n      if (options.service) {\n        data.service = options.service;\n      }\n\n      if (options.redirectTo) {\n        data.redirectTo = options.redirectTo;\n      }\n\n      if (options.resume) {\n        data.resume = options.resume;\n      }\n\n      if (options.lang) {\n        requestOpts.headers = {\n          'Accept-Language': options.lang\n        };\n      }\n    }\n\n    return this.request.send('/password/forgot/send_code', 'POST', null, data, requestOpts);\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotResendCode\n   * @param {String} email\n   * @param {String} passwordForgotToken\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotResendCode = function(email, passwordForgotToken, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    required(email, 'email');\n    required(passwordForgotToken, 'passwordForgotToken');\n\n    if (options) {\n      if (options.service) {\n        data.service = options.service;\n      }\n\n      if (options.redirectTo) {\n        data.redirectTo = options.redirectTo;\n      }\n\n      if (options.resume) {\n        data.resume = options.resume;\n      }\n\n      if (options.lang) {\n        requestOpts.headers = {\n          'Accept-Language': options.lang\n        };\n      }\n    }\n\n    return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/password/forgot/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Submits the verification token to the server.\n   * The API returns accountResetToken to the client.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotVerifyCode\n   * @param {String} code\n   * @param {String} passwordForgotToken\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotVerifyCode = function(code, passwordForgotToken) {\n    var self = this;\n    required(code, 'reset code');\n    required(passwordForgotToken, 'passwordForgotToken');\n\n    return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/password/forgot/verify_code', 'POST', creds, {\n          code: code\n        });\n      });\n  };\n\n  /**\n   * Returns the status for the passwordForgotToken.\n   * If the request returns a success response, the token has not yet been consumed.\n\n   * @method passwordForgotStatus\n   * @param {String} passwordForgotToken\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotStatus = function(passwordForgotToken) {\n    var self = this;\n\n    required(passwordForgotToken, 'passwordForgotToken');\n\n    return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/password/forgot/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * The API returns reset result to the client.\n   * HAWK-authenticated with accountResetToken\n   *\n   * @method accountReset\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {String} accountResetToken\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, a new `keyFetchToken` is provisioned. `options.sessionToken`\n   *   is required if `options.keys` is true.\n   *   @param {Boolean} [options.sessionToken]\n   *   If `true`, a new `sessionToken` is provisioned.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {String} [options.metricsContext.context] context identifier\n   *     @param {String} [options.metricsContext.entrypoint] entrypoint identifier\n   *     @param {String} [options.metricsContext.migration] migration identifier\n   *     @param {String} [options.metricsContext.service] service identifier\n   *     @param {String} [options.metricsContext.utmCampaign] marketing campaign identifier\n   *     @param {String} [options.metricsContext.utmContent] marketing campaign content identifier\n   *     @param {String} [options.metricsContext.utmMedium] marketing campaign medium\n   *     @param {String} [options.metricsContext.utmSource] marketing campaign source\n   *     @param {String} [options.metricsContext.utmTerm] marketing campaign search term\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountReset = function(email, newPassword, accountResetToken, options) {\n    var self = this;\n    var data = {};\n    var unwrapBKey;\n\n    options = options || {};\n\n    if (options.metricsContext) {\n      data.metricsContext = metricsContext.marshall(options.metricsContext);\n    }\n\n    if (options.sessionToken) {\n      data.sessionToken = options.sessionToken;\n    }\n\n    required(email, 'email');\n    required(newPassword, 'new password');\n    required(accountResetToken, 'accountResetToken');\n\n    if (options.keys) {\n      required(options.sessionToken, 'sessionToken');\n    }\n\n    return credentials.setup(email, newPassword)\n      .then(\n        function (result) {\n          if (options.keys) {\n            unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n          }\n\n          data.authPW = sjcl.codec.hex.fromBits(result.authPW);\n\n          return hawkCredentials(accountResetToken, 'accountResetToken',  HKDF_SIZE);\n        }\n      ).then(\n        function (creds) {\n          var queryParams = '';\n          if (options.keys) {\n            queryParams = '?keys=true';\n          }\n\n          var endpoint = '/account/reset' + queryParams;\n          return self.request.send(endpoint, 'POST', creds, data)\n            .then(\n              function(accountData) {\n                if (options.keys && accountData.keyFetchToken) {\n                  accountData.unwrapBKey = unwrapBKey;\n                }\n\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Get the base16 bundle of encrypted kA|wrapKb.\n   *\n   * @method accountKeys\n   * @param {String} keyFetchToken\n   * @param {String} oldUnwrapBKey\n   * @return {Promise} A promise that will be fulfilled with JSON of {kA, kB}  of the key bundle\n   */\n  FxAccountClient.prototype.accountKeys = function(keyFetchToken, oldUnwrapBKey) {\n    var self = this;\n\n    required(keyFetchToken, 'keyFetchToken');\n    required(oldUnwrapBKey, 'oldUnwrapBKey');\n\n    return hawkCredentials(keyFetchToken, 'keyFetchToken',  3 * 32)\n      .then(function(creds) {\n        var bundleKey = sjcl.codec.hex.fromBits(creds.bundleKey);\n\n        return self.request.send('/account/keys', 'GET', creds)\n          .then(\n            function(payload) {\n\n              return credentials.unbundleKeyFetchResponse(bundleKey, payload.bundle);\n            });\n      })\n      .then(function(keys) {\n        return {\n          kB: sjcl.codec.hex.fromBits(\n            credentials.xor(\n              sjcl.codec.hex.toBits(keys.wrapKB),\n              sjcl.codec.hex.toBits(oldUnwrapBKey)\n            )\n          ),\n          kA: keys.kA\n        };\n      });\n  };\n\n  /**\n   * This deletes the account completely. All stored data is erased.\n   *\n   * @method accountDestroy\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountDestroy = function(email, password, options) {\n    var self = this;\n    options = options || {};\n\n    required(email, 'email');\n    required(password, 'password');\n\n    return credentials.setup(email, password)\n      .then(\n        function (result) {\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          return self.request.send('/account/destroy', 'POST', null, data)\n            .then(\n              function(response) {\n                return response;\n              },\n              function(error) {\n                // if incorrect email case error\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.accountDestroy(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Gets the status of an account by uid.\n   *\n   * @method accountStatus\n   * @param {String} uid User account id\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatus = function(uid) {\n    required(uid, 'uid');\n\n    return this.request.send('/account/status?uid=' + uid, 'GET');\n  };\n\n  /**\n   * Gets the status of an account by email.\n   *\n   * @method accountStatusByEmail\n   * @param {String} email User account email\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatusByEmail = function(email) {\n    required(email, 'email');\n\n    return this.request.send('/account/status', 'POST', null, {email: email});\n  };\n\n  /**\n   * Destroys this session, by invalidating the sessionToken.\n   *\n   * @method sessionDestroy\n   * @param {String} sessionToken User session token\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionDestroy = function(sessionToken) {\n    var self = this;\n\n    required(sessionToken, 'sessionToken');\n\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/session/destroy', 'POST', creds);\n      });\n  };\n\n  /**\n   * Responds successfully if the session status is valid, requires the sessionToken.\n   *\n   * @method sessionStatus\n   * @param {String} sessionToken User session token\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionStatus = function(sessionToken) {\n    var self = this;\n\n    required(sessionToken, 'sessionToken');\n\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/session/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Sign a BrowserID public key\n   *\n   * @method certificateSign\n   * @param {String} sessionToken User session token\n   * @param {Object} publicKey The key to sign\n   * @param {int} duration Time interval from now when the certificate will expire in milliseconds\n   * @param {Object} [options={}] Options\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {String} [options.metricsContext.context] context identifier\n   *     @param {String} [options.metricsContext.entrypoint] entrypoint identifier\n   *     @param {String} [options.metricsContext.migration] migration identifier\n   *     @param {String} [options.metricsContext.service] service identifier\n   *     @param {String} [options.metricsContext.utmCampaign] marketing campaign identifier\n   *     @param {String} [options.metricsContext.utmContent] marketing campaign content identifier\n   *     @param {String} [options.metricsContext.utmMedium] marketing campaign medium\n   *     @param {String} [options.metricsContext.utmSource] marketing campaign source\n   *     @param {String} [options.metricsContext.utmTerm] marketing campaign search term\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.certificateSign = function(sessionToken, publicKey, duration, options) {\n    var self = this;\n    var data = {\n      publicKey: publicKey,\n      duration: duration\n    };\n\n    required(sessionToken, 'sessionToken');\n    required(publicKey, 'publicKey');\n    required(duration, 'duration');\n\n    options = options || {};\n\n    if (options.metricsContext) {\n      data.metricsContext = metricsContext.marshall(options.metricsContext);\n    }\n\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return self.request.send('/certificate/sign', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Change the password from one known value to another.\n   *\n   * @method passwordChange\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {String} newPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get a new keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordChange = function(email, oldPassword, newPassword, options) {\n    var self = this;\n    options = options || {};\n\n    required(email, 'email');\n    required(oldPassword, 'old password');\n    required(newPassword, 'new password');\n\n    return self._passwordChangeStart(email, oldPassword)\n      .then(function (credentials) {\n\n        var oldCreds = credentials;\n\n        return self._passwordChangeKeys(oldCreds)\n          .then(function (keys) {\n\n            return self._passwordChangeFinish(email, newPassword, oldCreds, keys, options);\n          });\n      });\n\n  };\n\n  /**\n   * First step to change the password.\n   *\n   * @method passwordChangeStart\n   * @private\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText` and `oldUnwrapBKey`\n   */\n  FxAccountClient.prototype._passwordChangeStart = function(email, oldPassword, options) {\n    var self = this;\n    options = options || {};\n\n    required(email, 'email');\n    required(oldPassword, 'old password');\n\n    return credentials.setup(email, oldPassword)\n      .then(function (oldCreds) {\n        var data = {\n          email: oldCreds.emailUTF8,\n          oldAuthPW: sjcl.codec.hex.fromBits(oldCreds.authPW)\n        };\n\n        return self.request.send('/password/change/start', 'POST', null, data)\n          .then(\n            function(passwordData) {\n              passwordData.oldUnwrapBKey = sjcl.codec.hex.fromBits(oldCreds.unwrapBKey);\n              return passwordData;\n            },\n            function(error) {\n              // if incorrect email case error\n              if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                options.skipCaseError = true;\n\n                return self._passwordChangeStart(error.email, oldPassword, options);\n              } else {\n                throw error;\n              }\n            }\n          );\n      });\n  };\n\n  function checkCreds(creds) {\n    required(creds, 'credentials');\n    required(creds.oldUnwrapBKey, 'credentials.oldUnwrapBKey');\n    required(creds.keyFetchToken, 'credentials.keyFetchToken');\n    required(creds.passwordChangeToken, 'credentials.passwordChangeToken');\n  }\n\n  /**\n   * Second step to change the password.\n   *\n   * @method _passwordChangeKeys\n   * @private\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeKeys = function(oldCreds) {\n    checkCreds(oldCreds);\n\n    return this.accountKeys(oldCreds.keyFetchToken, oldCreds.oldUnwrapBKey);\n  };\n\n  /**\n   * Third step to change the password.\n   *\n   * @method _passwordChangeFinish\n   * @private\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @param {Object} keys This object should contain the unbundled keys\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeFinish = function(email, newPassword, oldCreds, keys, options) {\n    options = options || {};\n    var self = this;\n\n    required(email, 'email');\n    required(newPassword, 'new password');\n    checkCreds(oldCreds);\n    required(keys, 'keys');\n    required(keys.kB, 'keys.kB');\n\n    var p1 = credentials.setup(email, newPassword);\n    var p2 = hawkCredentials(oldCreds.passwordChangeToken, 'passwordChangeToken',  HKDF_SIZE);\n\n    return P.all([p1, p2])\n      .spread(function(newCreds, hawkCreds) {\n        var newWrapKb = sjcl.codec.hex.fromBits(\n          credentials.xor(\n            sjcl.codec.hex.toBits(keys.kB),\n            newCreds.unwrapBKey\n          )\n        );\n\n        var queryParams = '';\n        if (options.keys) {\n          queryParams = '?keys=true';\n        }\n\n        return self.request.send('/password/change/finish' + queryParams, 'POST', hawkCreds, {\n          wrapKb: newWrapKb,\n          authPW: sjcl.codec.hex.fromBits(newCreds.authPW),\n          sessionToken: options.sessionToken\n        })\n        .then(function (accountData) {\n          if (options.keys && accountData.keyFetchToken) {\n            accountData.unwrapBKey = sjcl.codec.hex.fromBits(newCreds.unwrapBKey);\n          }\n          return accountData;\n        });\n      });\n  };\n\n  /**\n   * Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.\n   *\n   * @method getRandomBytes\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.getRandomBytes = function() {\n\n    return this.request.send('/get_random_bytes', 'POST');\n  };\n\n  /**\n   * Lock an account - only available in a testing environment.\n   *\n   * @method accountLock\n   * @param {String} email\n   * @param {String} password\n   */\n  FxAccountClient.prototype.accountLock = function (email, password) {\n    required(email, 'email');\n    required(password, 'password');\n\n    var self = this;\n    return credentials.setup(email, password)\n      .then(\n        function (result) {\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          return self.request.send('/account/lock', 'POST', null, data);\n        });\n  };\n\n\n  /**\n   * Send an account unlock code\n   *\n   * @method accountUnlockResendCode\n   * @param {String} email\n   * @param {Object} [options={}] Options\n   */\n  FxAccountClient.prototype.accountUnlockResendCode = function (email, options) {\n    required(email, 'email');\n\n    var data = {\n      email: email\n    };\n    if (options) {\n      if (options.service) {\n        data.service = options.service;\n      }\n\n      if (options.redirectTo) {\n        data.redirectTo = options.redirectTo;\n      }\n\n      if (options.resume) {\n        data.resume = options.resume;\n      }\n    }\n\n    return this.request.send('/account/unlock/resend_code', 'POST', null, data);\n  };\n\n  /**\n   * Verify an account unlock code\n   *\n   * @method accountUnlockVerifyCode\n   * @param {String} uid\n   * @param {String} code\n   */\n  FxAccountClient.prototype.accountUnlockVerifyCode = function (uid, code) {\n    required(uid, 'uid');\n    required(code, 'code');\n\n    return this.request.send('/account/unlock/verify_code', 'POST', null, {\n      uid: uid,\n      code: code\n    });\n  };\n\n  /**\n   * Add a new device\n   *\n   * @method deviceRegister\n   * @param {String} sessionToken User session token\n   * @param {String} deviceName Name of device\n   * @param {String} deviceType Type of device (mobile|desktop)\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceRegister = function (sessionToken, deviceName, deviceType, options) {\n    options = options || {};\n\n    required(sessionToken, 'sessionToken');\n    required(deviceName, 'deviceName');\n    required(deviceType, 'deviceType');\n\n    var request = this.request;\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        var data = {\n          name: deviceName,\n          type: deviceType\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Update the name of an existing device\n   *\n   * @method deviceUpdate\n   * @param {String} sessionToken User session token\n   * @param {String} deviceId User-unique identifier of device\n   * @param {String} deviceName Name of device\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceUpdate = function (sessionToken, deviceId, deviceName, options) {\n    options = options || {};\n\n    required(sessionToken, 'sessionToken');\n    required(deviceId, 'deviceId');\n    required(deviceName, 'deviceName');\n\n    var request = this.request;\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        var data = {\n          id: deviceId,\n          name: deviceName\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Unregister an existing device\n   *\n   * @method deviceDestroy\n   * @param {String} sessionToken Session token obtained from signIn\n   * @param {String} deviceId User-unique identifier of device\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceDestroy = function (sessionToken, deviceId) {\n    required(sessionToken, 'sessionToken');\n    required(deviceId, 'deviceId');\n\n    var request = this.request;\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        var data = {\n          id: deviceId\n        };\n\n        return request.send('/account/device/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Get a list of all devices for a user\n   *\n   * @method deviceList\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceList = function (sessionToken) {\n    required(sessionToken, 'sessionToken');\n\n    var request = this.request;\n    return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE)\n      .then(function(creds) {\n        return request.send('/account/devices', 'GET', creds);\n      });\n  };\n\n\n  return FxAccountClient;\n});\n\n"]}